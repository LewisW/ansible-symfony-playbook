---
# Database server
- hosts: dbserver
  vars:
    services:
      - mysql
  roles:
    # Start any services prior
    - { role: services, tags: ['services'] }

# Search server
- hosts: search
  tasks:
    - shell: service elasticsearch start
      sudo: yes
      tags: ['services'] 
    
# Cache server
- hosts: cache
  vars:
    services:
      - memcached
  roles:
    # Start any services prior
    - { role: services, tags: ['services'] }

# Webservers
- hosts: webserver
  gather_facts: yes
  max_fail_percentage: 0
  vars:
    services:
      - apache2
  # Uncomment for tenanted apps - replace the path to PHP with the tenanted one
  #symfony2_php_path: "{{ symfony2_release_destination }}/bin/tenant"
  #symfony2_console_path: "-e {{symfony2_project_env}} -P 0 php {{ symfony2_release_destination }}/app/console"

  vars_files:
    - ../app/config/parameters.yml.dist
    - vars/mysql.yml
    - vars/packages.yml
    - vars/apache.yml
  roles:
    # Start FPM prior
    - { role: services, tags: ['services'], services: ['php5-fpm'], when: "'php5-fpm' in php_packages" }
    # Start Beanstalk prior
    - { role: services, tags: ['services'], services: ['beanstalkd'], when: "'beanstalkd' in system_packages" }
    # Start any other services prior
    - { role: services, tags: ['services'] }
    
    - { role: versioned-deployment, when: "symfony2_versioned_deployment is defined and symfony2_versioned_deployment|bool" }

    - { role: permissions, when: "skip_permissions is undefined or not skip_permissions|bool" }

    - { role: symfony2 }

    - { role: backup }

    # Example of a daemon
    #- { role: daemonize, daemonize_command: 'transdoc:callbacks:start', daemonize_script_name: transdoc-callback, tags: ['services'] }

    - { role: migrate }

- hosts: search
  tasks:
    - name: Wait for elastic search to boot
      wait_for: port=9200 timeout=60
      tags: ['services']
